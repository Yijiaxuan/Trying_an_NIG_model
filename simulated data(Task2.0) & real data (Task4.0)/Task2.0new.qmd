---
title: "Task2.0"
format: html
editor: visual
---

```{r}
# Here modeling, I canceled y & mu's limited interval [0,1] in Task2_NIG, 
# and my simulating dada y follows normal(mu, sigma2)

# I get psoterior value mu & sigma2 samiliar to Task1.

#N=10000

library(rstan)

#prepare data
set.seed(123456)
N <- 10000
B0 <- 0.5 
alpha0 <- 6 # choose a value greater than 4
delta0 <- 25
mu0 <- 0.5

g <- rgamma(1, shape=alpha0/2, rate=delta0/2) 
sigma2 <- 1/g 
mu_true <- rnorm(1, mean = mu0, sd = sqrt(sigma2 * B0))
y <- rnorm(N, mean = mu_true, sd = sqrt(sigma2))

#package data
data_list<- list(
  N=N,
  y=y,
  B0=B0,
  alpha0=alpha0,
  delta0=delta0,
  mu0=mu0
)

#Run stan
fit <- stan(
  file = "/Users/16438/Desktop/Reaserch Project/Trying NIG model/Task2.0_NIG_in_RStan/Task2.0_NIG.stan",
  data = data_list,
  iter = 6500,  
  warmup = 1500,
  chains = 4,
  seed = 123456
)

#check result
print(fit)
plot(fit)
traceplot(fit, pars = c("mu", "sigma2"))
posterior <- rstan::extract(fit, pars = c("mu", "sigma2"))
mean(posterior$mu)
mean(posterior$sigma2)

#hist(posterior$mu, main = "Posterior of mu")
#hist(posterior$sigma2, main = "Posterior of sigma2")
summary(fit, pars = c("mu", "sigma2"))$summary
print(mu_true)
```

```{r}
library(ggplot2)

mu_samps <- posterior$mu
mu_mean  <- mean(mu_samps)
mu_ci95  <- quantile(mu_samps, c(0.025, 0.975))

p <- ggplot(data.frame(y = y), aes(x = y)) +
  geom_histogram(aes(y = after_stat(density)), 
                 bins = 60, fill = "skyblue", color = "white", alpha = 0.6) +
  geom_density(color = "red", linewidth = 1) +
  geom_vline(xintercept = mu_mean, color = "blue", linewidth = 1) +
  geom_vline(xintercept = mu_ci95, color = "blue", linetype = "dashed", linewidth = 1) +
  geom_vline(xintercept = mu_true, color = "red", linetype = "dotdash", linewidth = 1) +
  labs(
    title = "Distribution of simulated y with posterior estimates of mu",
    subtitle = sprintf("mu posterior mean = %.3f, 95%% CI = [%.3f, %.3f], true mu = %.3f",
                       mu_mean, mu_ci95[1], mu_ci95[2], mu_true),
    x = "y", y = "Density"
  ) +
  theme_minimal(base_size = 13)

print(p)
```
